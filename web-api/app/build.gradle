plugins {
    alias libs.plugins.spring
    alias libs.plugins.dependency.management

    alias libs.plugins.kotlin.jvm
    alias libs.plugins.kotlin.allopen
    alias libs.plugins.kotlin.spring
    alias libs.plugins.kotlin.jpa
}

allOpen {
    annotation("jakarta.persistence.Entity")
    annotation("jakarta.persistence.Embeddable")
    annotation("jakarta.persistence.MappedSuperclass")
    annotation("jakarta.persistence.Embeddable")
    annotation("com.workflow.api.utils.DTO")
}

dependencies {
    implementation project(":web-api:security-jwt")

    // PLATFORM DEPENDENCIES
    implementation libs.kotlin.reflect
    implementation libs.kotlin.stdlib
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3")

    // SPRING DEPENDENCIES
    implementation libs.spring.web
    implementation libs.spring.validation
    implementation libs.spring.security
    implementation libs.spring.data.jpa
    implementation libs.spring.actuator
    developmentOnly libs.spring.devtools

    // OPENAPI DEPENDENCIES
    implementation libs.spring.openapi.webmvc.api
    implementation libs.spring.openapi.webmvc.ui

    // DATABASE DEPENDENCIES
    runtimeOnly libs.mysql.connector
    runtimeOnly libs.h2.connector

    // JWT DEPENDENCIES
    implementation libs.jwt.api
    implementation libs.jwt.jackson
    implementation libs.jwt.impl

    // OTHER DEPENDENCIES
    implementation libs.jackson.kotlin
    implementation libs.model.mapper

    // TEST DEPENDENCIES
    testImplementation(libs.spring.test) {
        exclude(group: "junit", module: "junit")
    }

    testImplementation libs.junit.jupiter.api
    testImplementation libs.junit.jupiter.engine
    testImplementation libs.junit.jupiter.params
    testImplementation libs.junit.jupiter.mockito

    testImplementation libs.mockk.mockk
    testImplementation libs.mockk.agent.jvm
    testImplementation libs.h2.connector
}

test {
    useJUnitPlatform()
}
